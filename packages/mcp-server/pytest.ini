[pytest]
# Pytest configuration for Tiger MCP Server tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and formatting
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --color=yes
    --durations=10
    --cov=src/mcp_server
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80

# Markers
markers =
    unit: Unit tests (fast, isolated tests)
    integration: Integration tests (test component interactions)
    slow: Slow running tests (may take several seconds)
    network: Tests requiring network access
    
# Async testing
asyncio_mode = auto

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Minimum Python version
minversion = 3.11

# Required plugins
required_plugins = 
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0

# Test timeout
timeout = 300  # 5 minutes for entire test suite

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = src/mcp_server
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = true
skip_covered = false

[coverage:html]
directory = htmlcov
title = Tiger MCP Server Test Coverage